org 0x7e00
jmp 0x0000:start

%include "menu.asm"
%include "game.asm"

data:
	;Dados do projeto...
    flag db 16, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 7, 8, 8, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 7, 8, 8, 8, 8, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 8, 8, 8, 8, 9, 1, 8, 8, 8, 8, 1, 8, 0, 0, 0, 0, 0, 0, 8, 8, 9, 9, 9, 9, 8, 9, 9, 8, 0, 0, 0, 0, 0, 0, 8, 1, 9, 9, 15, 15, 9, 9, 9, 8, 0, 0, 0, 0, 0, 0, 8, 9, 9, 9, 9, 9, 9, 9, 9, 1, 0, 0, 0, 0, 0, 0, 8, 9, 15, 15, 15, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 8, 9, 9, 9, 15, 15, 9, 9, 9, 8, 0, 0, 0, 0, 8, 8, 8, 8, 1, 9, 9, 9, 9, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 0, 8, 1, 9, 9, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    cometa db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'.',0,0,0,0,6,6,6,6,6,0,6,6,6,0,0,0,'.',0,0,6,6,6,6,6,6,6,0,6,6,6,0,0,0,'.',0,6,0,6,6,6,6,6,0,6,6,6,6,6,6,0,'.',0,0,6,6,6,6,0,0,6,6,6,6,6,6,6,0,'.',0,6,0,6,6,0,6,0,6,6,0,0,0,6,6,0,'.',0,0,6,6,6,6,6,6,0,6,6,6,0,6,6,0,'.',0,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,'.',0,6,6,0,6,0,6,6,6,6,6,6,6,6,6,6,'.',0,6,6,6,0,6,6,6,6,0,6,6,6,6,6,6,'.',0,6,6,6,0,6,6,6,6,0,6,6,6,0,6,6,'.',0,6,6,6,6,0,0,0,0,6,6,6,6,0,6,6,'.',0,6,6,6,0,6,6,0,6,6,6,6,6,0,6,6,'.',0,6,6,0,6,6,6,0,6,6,6,6,6,6,0,0,'.',0,0,0,6,6,6,6,0,6,6,6,6,6,6,0,0,'.',0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,'0'
    message1 db "             SOCCER PONG", 10, 13, 10, 13, 10, 13, 10, 13, "        Press ENTER to start", 10, 13, 10, 13, 10, 13, 10, 13, 10, 13, 10, 13, "             INSTRUCTIONS", 10, 13, 10, 13, 10, 13, "        Player 1:       Player 2:", 10, 13, 10, 13, 10, 13, "        W -> up           O -> up", 10, 13, 10, 13, "      S -> down         L -> down", 0
    delay_count dw 5000
    timeout db 0 
    first_bar_posy dw 100
    second_bar_posy dw 100
    prev_ball_pos_x dw 100
    ball_pos_y dw 100

start:
    ;setup
    xor ax, ax
    xor cx, cx
   	xor dx, dx
    mov di, 1 ;flag de sentido x
    mov bp, 100;posição x da bola
    mov bh, 0  ;flag de sentido y
    mov bl, 10  ;posição y da bola

    call clear_screen
    call load_first_bar
    call load_second_bar
    call load_ball
    
    ;loop

    ;call menu
    
    call game_loop

jmp $
